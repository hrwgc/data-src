require "rubygems"
require 'rake'
require 'yaml'
require 'time'

SOURCE = "."
CONFIG = {
  'version' => "0.0.1",
  'layouts' => File.join(SOURCE, "_layouts"),
  'posts' => File.join(SOURCE, "_posts"),
  'dataset' => File.join(SOURCE, "_posts/data"),
  'metadata' => File.join(SOURCE, "_posts/metadata"),
  'dpkg' => File.join(SOURCE, "_posts/dpkg"),
  'map' => File.join(SOURCE, "_posts/maps"),
  'post_ext' => "md",
  "data_ext" => "md",
  "metadata_ext" => "md",
  "dpkg_ext" => "json",
  "map_ext" => "html",
}

# Path configuration helper
module CH
  class Path
    SOURCE = "."
    Paths = {
      :layouts => "_layouts",
      :posts => "_posts",
      :dataset => "_posts/data",
      :metadata => "_posts/metadata",
      :dpkg => "_posts/dpkg",
      :map => "_posts/maps",
    }
    
    def self.base
      SOURCE
    end

    # build a path relative to configured path settings.
    def self.build(path, opts = {})
      opts[:root] ||= SOURCE
      path = "#{opts[:root]}/#{Paths[path.to_sym]}/#{opts[:node]}".split("/")
      path.compact!
      File.__send__ :join, path
    end
  
  end #Path
end #CH

# Usage: rake dataset title="A Title" [date="2012-02-09"]
desc "Create a new dataset in #{CONFIG['dataset']}"
task :dataset do
  abort("rake aborted: '#{CONFIG['dataset']}' directory not found.") unless FileTest.directory?(CONFIG['dataset'])
  title = ENV["title"] || "new-data"
  tags = ENV["tags"] || "[]"
  pub = ENV["pub"] || ""
  desc = ENV["desc"] || ""
  shp = ENV["shp"] || ""
  sql = ENV["sql"] || ""
  csv = ENV["csv"] || ""
  map = ENV["map"] || ""
  pdf = ENV["pdf"] || ""
  link = ENV["link"] || ""
  pdf = ENV["pdf"] || ""
  parents = ENV["parents"] || ""
  source = ENV["source"] || "#"
  category = ENV["category"] || "dataset"
  slug = title.downcase.strip.gsub(' ', '-').gsub(/[^\w-]/, '')
  tags = tags.gsub(/^/,'
   - ').gsub(/[,]{1}[ ]{0,1}/,'
   - ')
   map = map.gsub(/^/,'
   - ').gsub(/[,]{1}[ ]{0,1}/,'
   - ')

  
  begin
    date = (ENV['date'] ? Time.parse(ENV['date']) : Time.now).strftime('%Y-%m-%d')
  rescue Exception => e
    puts "Error - date format must be YYYY-MM-DD, please check you typed it correctly!"
    exit -1
  end
  filename = File.join(CONFIG['dataset'], "#{date}-#{slug}.#{CONFIG['data_ext']}")
  if File.exist?(filename)
    abort("rake aborted!") if ask("#{filename} already exists. Do you want to overwrite?", ['y', 'n']) == 'n'
  end

  puts "Creating new dataset: #{filename}"
  open(filename, 'w') do |dataset|
    dataset.puts "---"
    dataset.puts "layout: dataset"
    dataset.puts "title: \"#{title.gsub(/-/,' ')}\""
    dataset.puts "description: \"#{desc}\""
    dataset.puts "category: \"#{category}\""
    dataset.puts "tags: #{tags}"
    dataset.puts "published: \"#{pub}\""
    dataset.puts "sql: \"#{sql}\""
    dataset.puts "shp: \"#{shp}\""
    dataset.puts "pdf: \"#{pdf}\""
    dataset.puts "link: \"#{link}\""
    dataset.puts "csv: \"#{csv}\""
    dataset.puts "parents: \"#{parents}\""
    dataset.puts "source: \"#{source}\""
    dataset.puts "---"
    dataset.puts "[#{title}]"
    dataset.puts ""
    dataset.puts "[#{title}]: #{link}"
    dataset.puts "<p class='data desc'>#{desc}</p>"
    
    
  end
end # task :dataset


## usage: preview jekyll posts 
## rake preview
#
desc "Launch preview environment"
task :preview do
  system "jekyll --auto --server --pygments"
end # task :preview

def verify_manifest(theme_path)
  manifest_path = File.join(theme_path, "manifest.yml")
  manifest_file = File.open( manifest_path )
  abort("rake aborted: repo must contain valid manifest.yml") unless File.exist? manifest_file
  manifest = YAML.load( manifest_file )
  manifest_file.close
  manifest
end

def ask(message, valid_options)
  if valid_options
    answer = get_stdin("#{message} #{valid_options.to_s.gsub(/"/, '').gsub(/, /,'/')} ") while !valid_options.include?(answer)
  else
    answer = get_stdin(message)
  end
  answer
end

def get_stdin(message)
  print message
  STDIN.gets.chomp
end


#Load custom rake scripts
Dir['_rake/*.rake'].each { |r| load r }
